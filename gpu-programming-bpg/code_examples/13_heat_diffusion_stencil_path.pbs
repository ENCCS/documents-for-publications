$ git clone https://github.com/ENCCS/gpu-programming.git$ cd gpu-programming/content/examples/stencil/salloc -A project_465000485 -N 1 -t 1:00:0 -p standard-g --gpus-per-node=1module load LUMI/22.08module load partition/Gmodule load rocm/5.3.3module use /project/project_465000485/Easy_Build_Installations/modules/LUMI/22.08/partition/G/module load hipSYCL$ cd ../sycl/(give the following lines some time, probably a couple of min)$ syclcc -O2 -o stencil_naive core-naive.cpp io.cpp main-naive.cpp pngwriter.c setup.cpp utilities.cpp$ syclcc -O2 -o stencil core.cpp io.cpp main.cpp pngwriter.c setup.cpp utilities.cpp$ srun stencil_naive$ srun stencil$ module load cray-python/3.9.13.1(install needed dependencies locally)$ pip3 install --user numba matplotlib$ cd ../python/(make sure you have active allocation)$ srun python3 main.py## commands for Julia, LUMi CPU#$ # interactive CPU node$ srun --account=project_465000485 --partition=standard --nodes=1 --cpus-per-task=32 --ntasks-per-node=1 --time=01:00:00 --pty bash$ # load Julia env$ module purge$ module use /appl/local/csc/modulefiles$ module load julia/1.9.0$ # in directory with Project.toml and source files, instantiate an environment to install packages$ julia --project -e "using Pkg ; Pkg.instantiate()"$ # finally run$ julia --project main.jl## commands for Julia, LUMi GPU#$ srun --account=project_465000485 --partition=standard-g --nodes=1 --cpus-per-task=1 --ntasks-per-node=1 --gpus-per-node=1 --time=1:00:00 --pty bash