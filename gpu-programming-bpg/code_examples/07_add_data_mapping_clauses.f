!! OpenAcc!program vecsum    implicit none    integer, parameter :: nx = 102400    real, dimension(:), allocatable :: vecA,vecB,vecC	real :: sum    integer :: i    allocate (vecA(nx), vecB(nx),vecC(nx))    ! Initialization of vectors    do i = 1, nx        vecA(i) = 1.0        vecB(i) = 1.0    end do    ! Adding mapping clauses here    !$acc parallel loop    do i=1,nx        vecC(i) = vecA(i) + vecB(i)    enddo    !$acc end parallel loop    sum = 0.0    ! Calculate the sum    do i = 1, nx		sum =  vecC(i) + sum    end do    write(*,'(A,F18.6)') 'The sum is: ', sumend program vecsum!! OpenMP!program vecsum	implicit none	integer, parameter :: nx = 102400	real, dimension(nx) :: vecA,vecB,vecC	real :: sum	integer :: i	! Initialization of vectors	do i = 1, nx		vecA(i) = 1.0		vecB(i) = 1.0	end do	! Adding mapping clauses here	!$omp target teams distribute parallel do simd	do i=1,nx		vecC(i) = vecA(i) + vecB(i)	enddo	!$omp end target teams distribute parallel do simd	sum = 0.0	! Calculate the sum	do i = 1, nx		sum =  vecC(i) + sum	end do	write(*,'(A,F18.6)') 'The sum is: ', sumend program vecsum